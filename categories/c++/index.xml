<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>C&#43;&#43; - 分类 - iris</title>
        <link>https://blog.ginshio.org/categories/c&#43;&#43;/</link>
        <description>C&#43;&#43; - 分类 - iris</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>iris@ginshio.org (GinShio)</managingEditor>
            <webMaster>iris@ginshio.org (GinShio)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 01 Dec 2020 19:42:00 &#43;0800</lastBuildDate><atom:link href="https://blog.ginshio.org/categories/c&#43;&#43;/" rel="self" type="application/rss+xml" /><item>
    <title>C&#43;&#43; Concurrency (1) – 标准库</title>
    <link>https://blog.ginshio.org/2020/cpp_concurrency_std/</link>
    <pubDate>Tue, 01 Dec 2020 19:42:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2020/cpp_concurrency_std/</guid>
    <description><![CDATA[线程管理 创建线程 新的线程会在 ::std::thread (头文件 thread 中) 对象创建的时候被启动，在函数执行完毕后，该线程也就结束了，提供的函数对象会复制到新线程的存储空间]]></description>
</item></channel>
</rss>
