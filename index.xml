<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>iris</title>
        <link>https://blog.ginshio.org/</link>
        <description>iris | GinShio的个人博客</description>
        <generator>Hugo -- gohugo.io</generator><managingEditor>iris@ginshio.org (GinShio)</managingEditor>
            <webMaster>iris@ginshio.org (GinShio)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 22 Feb 2021 22:23:00 &#43;0800</lastBuildDate>
            <atom:link href="https://blog.ginshio.org/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>使用 steamcmd 搭建游戏服务器</title>
    <link>https://blog.ginshio.org/2021/steam_apps/</link>
    <pubDate>Mon, 22 Feb 2021 22:23:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2021/steam_apps/</guid>
    <description><![CDATA[和好友联机的时候本地服务器实在是不爽，一个人起飞，其他人都是 高PING战士 ，最开始主要是 L4D2 时各种 RPG 服务器有些不爽，为了纯净的服务器只好自己建]]></description>
</item><item>
    <title>Elixir学习笔记 003</title>
    <link>https://blog.ginshio.org/2021/elixir%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_003/</link>
    <pubDate>Sun, 21 Feb 2021 20:25:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2021/elixir%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_003/</guid>
    <description><![CDATA[Mix Mix 是 Elixir 社区开发的集包管理、依赖管理、构建工具于一身的开发工具，扩展性极好，功能强大，自带对 Erlang 的支持，可以类比 Golang 自带的 go，详细的使用方式请]]></description>
</item><item>
    <title>Elixir学习笔记 002</title>
    <link>https://blog.ginshio.org/2021/elixir%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_002/</link>
    <pubDate>Fri, 19 Feb 2021 14:31:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2021/elixir%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_002/</guid>
    <description><![CDATA[模块 之前函数的时候也简单的见过模块了，Elixir 允许嵌套模块，这样可以轻松定义多层命名空间 1 2 3 4 5 defmodule Greeter.Greeting do def morning(name), do: &#34;Good morning, #{name}&#34; def evening(name), do: &#34;Good evening, #{name}&#34; end Greeter.Greeting.morning(&#34;iris&#34;) # &#34;Good]]></description>
</item><item>
    <title>Elixir学习笔记 001</title>
    <link>https://blog.ginshio.org/2021/elixir%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_001/</link>
    <pubDate>Tue, 16 Feb 2021 16:44:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2021/elixir%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_001/</guid>
    <description><![CDATA[好久没学习，随便写点东西，一直想学FP来着，不过之前 Haskell 整的有点难受，好难啊不太会，下次静下心来好好学一学吧，不过先试试 Erlang / Elixir ，听说也很难？ 至]]></description>
</item><item>
    <title>C&#43;&#43; Concurrency (2) – 原子操作</title>
    <link>https://blog.ginshio.org/2020/cpp_concurrency_atomic/</link>
    <pubDate>Sat, 05 Dec 2020 17:46:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2020/cpp_concurrency_atomic/</guid>
    <description><![CDATA[原子操作 原子操作是一个不可分割的操作，系统的所有线程不会观察到原子操作完成了一半。如果读取对象的加载操作是原子的，那么这个对象的所有修改操作]]></description>
</item><item>
    <title>C&#43;&#43; Concurrency (1) – 标准库</title>
    <link>https://blog.ginshio.org/2020/cpp_concurrency_std/</link>
    <pubDate>Tue, 01 Dec 2020 19:42:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2020/cpp_concurrency_std/</guid>
    <description><![CDATA[线程管理 创建线程 新的线程会在 ::std::thread (头文件 thread 中) 对象创建的时候被启动，在函数执行完毕后，该线程也就结束了，提供的函数对象会复制到新线程的存储空间]]></description>
</item><item>
    <title>搭建邮箱服务器</title>
    <link>https://blog.ginshio.org/2020/mail_server/</link>
    <pubDate>Mon, 16 Nov 2020 22:43:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2020/mail_server/</guid>
    <description><![CDATA[搭建邮局服务器的想法之前一直都有，不过一直没有尝试，国庆的时候从阿里云换到了腾讯云的时候尝试直接使用 postfix 和 dovecot 搭建，尝试了大概3天被劝退了，重新]]></description>
</item><item>
    <title>GPG 入门指北</title>
    <link>https://blog.ginshio.org/2020/gpg_started_guide/</link>
    <pubDate>Sat, 14 Nov 2020 18:14:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2020/gpg_started_guide/</guid>
    <description><![CDATA[Pretty Good Privacy (PGP)，是一套用于讯息加密、验证的应用程序，由 Phil Zimmermann 于1991年发布，由一系列散列、数据压缩、对称密钥加密以及公钥加密的算法组合而成]]></description>
</item><item>
    <title>SICP(1) – 构造过程抽象</title>
    <link>https://blog.ginshio.org/2020/sicp_001/</link>
    <pubDate>Sat, 07 Nov 2020 15:05:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2020/sicp_001/</guid>
    <description><![CDATA[心智的活动，除了尽力产生各种简单的认识之外，主要表现在如下三个方面： 将若干简单认识组合为一个复杂认识，由此产生出各种复杂认识 将两个认识放在一]]></description>
</item><item>
    <title>编译原理 (4) – 语法分析1</title>
    <link>https://blog.ginshio.org/2020/compilerprinciple_004/</link>
    <pubDate>Tue, 03 Nov 2020 16:09:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2020/compilerprinciple_004/</guid>
    <description><![CDATA[程序设计语言构造的语法可以使用 上下文无关文法 或者 BNF (巴库斯-瑙尔范式) 表示法来描述，文法为语言设计者和编译器编写者提供了很大便利: 文法给出了]]></description>
</item><item>
    <title>编译原理 (3) – 词法分析2</title>
    <link>https://blog.ginshio.org/2020/compilerprinciple_003/</link>
    <pubDate>Sat, 17 Oct 2020 22:33:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2020/compilerprinciple_003/</guid>
    <description><![CDATA[基于DFA的模式匹配器的优化 NFA的重要状态 如果一个 NFA 状态有一个标号非 \(\varepsilon\) 的离开转换，那么我们称这个状态为 重要状态 (important state)。子集构造法在]]></description>
</item><item>
    <title>在服务器上部署一些服务</title>
    <link>https://blog.ginshio.org/2020/service/</link>
    <pubDate>Tue, 13 Oct 2020 20:16:00 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://blog.ginshio.org/2020/service/</guid>
    <description><![CDATA[个人使用的是腾讯云的轻量服务器，系统镜像选择的是 Ubuntu 20.04，搭建的服务有 博客 HUGO 、私有网盘 Nextcloud 以及 Git服务器 GitLab 一下服务搭建时，域名统一使用 e]]></description>
</item></channel>
</rss>
